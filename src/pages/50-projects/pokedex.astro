---
const pokemonCount = 10
const colors = {
  fire: "#FDDFDF",
  grass: "#DEFDE0",
  electric: "#FCF7DE",
  water: "#DEF3FD",
  ground: "#f4e7da",
  rock: "#d5d5d4",
  fairy: "#fceaff",
  poison: "#98d7a5",
  bug: "#f8d5a3",
  dragon: "#97b3e6",
  psychic: "#eaeda1",
  flying: "#F5F5F5",
  fighting: "#E6E0D4",
  normal: "#F5F5F5",
}

const mainTypes = Object.keys(colors)

const pokemonCards: any[] = []

const createPokemonCard = (pokemon: any) => {
  const name = pokemon.name[0].toUpperCase() + pokemon.name.slice(1)
  const id = pokemon.id.toString().padStart(3, "0")

  const pokemonTypes = pokemon.types.map((type: any) => type.type.name)
  const type = mainTypes.find((type) => pokemonTypes.indexOf(type) > -1)
  // @ts-ignore
  const color = colors[type]
  const image = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`

  pokemonCards.push({ id, name, type, color, image })
}

const getPokemon = async (id: number) => {
  const url = `https://pokeapi.co/api/v2/pokemon/${id}`
  const res = await fetch(url)
  const data = await res.json()
  createPokemonCard(data)
}

const fetchAllPokemon = async () => {
  for (let i = 1; i <= pokemonCount; i++) {
    await getPokemon(i)
  }
}

await fetchAllPokemon()
---

<h1>Pokedex</h1>
<div
  class="pokemon-container"
  id="pokemon-container">
  {
    pokemonCards.map((pokemon) => {
      return (
        <div
          class="pokemon"
          style={`background-color: ${pokemon.color}`}>
          <div class="img-container">
            <img
              src={pokemon.image}
              alt={pokemon.name}
            />
          </div>
          <div class="info">
            <span class="number">#{pokemon.id}</span>
            <h3 class="name">{pokemon.name}</h3>
            <small class="type">
              Type: <span>{pokemon.type}</span>
            </small>
          </div>
        </div>
      )
    })
  }
</div>

<style>
  @import url("https://fonts.googleapis.com/css?family=Lato:300,400&display=swap");

  * {
    box-sizing: border-box;
  }

  body {
    font-family: "Lato", sans-serif;
    background: #efefbb;
    background: linear-gradient(to right, #d4d3dd, #efefbb);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
  }

  h1 {
    letter-spacing: 3px;
  }

  .pokemon-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-start;
    margin: 0 auto;
    max-width: 1200px;
  }

  .pokemon {
    background-color: #eee;
    border-radius: 10px;
    box-shadow: 0 3px 15px rgba(100, 100, 100, 0.5);
    margin: 10px;
    padding: 20px;
    text-align: center;
  }

  .pokemon .img-container {
    background-color: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    width: 120px;
    height: 120px;
    text-align: center;
  }

  .pokemon .img-container img {
    max-width: 90%;
    margin-top: 20px;
  }

  .pokemon .info {
    margin-top: 20px;
  }

  .pokemon .info .number {
    background-color: rgba(0, 0, 0, 0.1);
    padding: 5px 10px;
    border-radius: 10px;
    font-size: 0.8em;
  }

  .pokemon .info .name {
    margin: 15px 0 7px;
    letter-spacing: 1px;
  }
</style>

<!-- vanilla js version below. in order to use this, styles have to be global -->
<!-- <script>
  const pokemonContainer = document.getElementById("pokemon-container")
  const pokemonCount = 150
  const colors = {
    fire: "#FDDFDF",
    grass: "#DEFDE0",
    electric: "#FCF7DE",
    water: "#DEF3FD",
    ground: "#f4e7da",
    rock: "#d5d5d4",
    fairy: "#fceaff",
    poison: "#98d7a5",
    bug: "#f8d5a3",
    dragon: "#97b3e6",
    psychic: "#eaeda1",
    flying: "#F5F5F5",
    fighting: "#E6E0D4",
    normal: "#F5F5F5",
  }

  const mainTypes = Object.keys(colors)

  const createPokemonCard = (pokemon: any) => {
    const pokemonElement = document.createElement("div")
    pokemonElement.classList.add("pokemon")

    const name = pokemon.name[0].toUpperCase() + pokemon.name.slice(1)
    const id = pokemon.id.toString().padStart(3, "0")

    const pokemonTypes = pokemon.types.map((type: any) => type.type.name)
    const type = mainTypes.find((type) => pokemonTypes.indexOf(type) > -1)
    // @ts-ignore
    const color = colors[type]

    pokemonElement.style.backgroundColor = color

    const pokemonInnerHTML = `
    <div class="img-container">
        <img src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png"" alt="${name}">
    </div>
    <div class="info">
        <span class="number">#${id}</span>
        <h3 class="name">${name}</h3>
        <small class="type">Type: <span>${type}</span> </small>
    </div>
    `

    pokemonElement.innerHTML = pokemonInnerHTML

    pokemonContainer!.appendChild(pokemonElement)
  }

  const getPokemon = async (id: number) => {
    const url = `https://pokeapi.co/api/v2/pokemon/${id}`
    const res = await fetch(url)
    const data = await res.json()
    createPokemonCard(data)
  }

  const fetchAllPokemon = async () => {
    for (let i = 1; i <= pokemonCount; i++) {
      await getPokemon(i)
    }
  }

  fetchAllPokemon()
</script> -->
